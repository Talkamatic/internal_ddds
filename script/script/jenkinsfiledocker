pipeline {
    agent { label 'docker' }

    parameters {
        string(
            defaultValue: 'refs/heads/master',
            description: 'The Git reference used in checkout',
            name: 'GERRIT_REFSPEC'
        )
    }

    options {
        buildDiscarder(
            logRotator(
                artifactDaysToKeepStr: '',
                artifactNumToKeepStr: '',
                daysToKeepStr: '',
                numToKeepStr: '10'
            )
        )
        timestamps()
        timeout(time: 1, unit: 'HOURS')
    }

    triggers {
        gerrit(
            customUrl: '',
            gerritProjects:[
                [
                    branches: [
                        [
                            compareType: 'ANT',
                            pattern: '**'
                        ]
                    ],
                    compareType: 'PLAIN',
                    disableStrictForbiddenFileVerification: false,
                    pattern: 'internal_ddds'
                ]
            ],
            serverName: 'Talkamatic',
            triggerOnEvents: [
                patchsetCreated(
                    excludeDrafts: true,
                    excludeNoCodeChange: false,
                    excludeTrivialRebase: false
                )
            ],
            skipVote: [
              onSuccessful: false,
              onFailed    : false,
              onUnstable  : false,
              onNotBuilt  : false
            ]
        )
    }

    stages {
        stage('clean') {
            steps{
                step([$class: 'WsCleanup'])
            }
        }

        stage('checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [
                        [name: '$GERRIT_BRANCH']
                    ],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [
                        [
                            $class: 'BuildChooserSetting',
                            buildChooser: [
                                $class: 'GerritTriggerBuildChooser'
                            ]
                        ], [$class: 'RelativeTargetDirectory', relativeTargetDir: 'internal_ddds']
                    ],
                    submoduleCfg: [],
                    userRemoteConfigs: [[
                        credentialsId: 'jenkinsatgerrit',
                        refspec: '$GERRIT_REFSPEC',
                        url: 'ssh://jenkins@gerrit.talkamatic.se:29418/internal_ddds'
                    ]]
                ])
            }
        }

        stage('build & test ddds') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                        def tdm = docker.image('registry.hub.docker.com/talkamatic/tdm:master')
                        tdm.pull()
                        dir("internal_ddds") {
                            tdm.inside() {
                                stage('tide pooler') {
                                    sh 'tdm build --config tidePooler.json'
                                    sh 'tdm serve eng --config tidePooler.json &'
                                    sh 'tala test http://localhost:9090/interact tidePooler/test/interaction_tests_eng.txt'
                                    sh 'killall tdm'
                                }

                                stage('downdate conditions') {
                                    sh 'tdm build --config downdate_conditions.config.json'
                                    sh 'tdm serve eng --config downdate_conditions.config.json &'
                                    sh 'tala test http://localhost:9090/interact downdate_conditions/test/interaction_tests_eng.txt'
                                    sh 'killall tdm'
                                }

                                stage('multi ddd') {
                                    dir("multi_ddd") {
                                        sh 'tdm build'
                                        sh 'tdm serve eng &'
                                        sh 'tala test http://localhost:9090/interact music_player/test/interaction_tests_eng.txt'
                                        sh 'tala test http://localhost:9090/interact navigation/test/interaction_tests_eng.txt'
                                        sh 'tala test http://localhost:9090/interact navigation/test/interaction_tests_eng_robust.txt'
                                        sh 'killall tdm'
                                        sh 'tdm serve sv &'
                                        sh 'tala test http://localhost:9090/interact music_player/test/interaction_tests_sv.txt'
                                        sh 'killall tdm'
                                    }
                                }

                                dir("rgl_migration") {
                                    stage('rgl migration without rgl') {
                                        dir("without_rgl") {
                                            sh 'tdm build'
                                            sh 'tdm serve eng &'
                                            sh 'tala test http://localhost:9090/interact android/test/interaction_tests_eng.txt'
                                            sh 'killall tdm'
                                        }
                                    }

                                    stage('rgl migration with rgl') {
                                        dir("with_rgl") {
                                            stage('build & test android') {
                                                sh 'tdm build --config android.config.json'
                                                sh 'tdm serve eng --config android.config.json &'
                                                sh 'tala test http://localhost:9090/interact android/test/interaction_tests_eng.txt'
                                                sh 'killall tdm'
                                                sh 'tdm serve dut --config android.config.json &'
                                                sh 'tala test http://localhost:9090/interact android/test/interaction_tests_dut.txt'
                                                sh 'killall tdm'
                                                sh 'tdm serve fre --config android.config.json &'
                                                sh 'tala test http://localhost:9090/interact android/test/interaction_tests_fre.txt'
                                                sh 'killall tdm'
                                                sh 'tdm serve chi --config android.config.json &'
                                                sh 'tala test http://localhost:9090/interact android/test/interaction_tests_chi.txt'
                                                sh 'killall tdm'
                                            }

                                            stage('build & test device failure') {
                                                sh 'tdm build --config device_failure.config.json'
                                                sh 'tdm serve eng --config device_failure.config.json &'
                                                sh 'tala test http://localhost:9090/interact device_failure/test/interaction_tests_eng.txt'
                                                sh 'killall tdm'
                                                sh 'tdm serve dut --config device_failure.config.json &'
                                                sh 'tala test http://localhost:9090/interact device_failure/test/interaction_tests_dut.txt'
                                                sh 'killall tdm'
                                                sh 'tdm serve fre --config device_failure.config.json &'
                                                sh 'tala test http://localhost:9090/interact device_failure/test/interaction_tests_fre.txt'
                                                sh 'killall tdm'
                                                sh 'tdm serve chi --config device_failure.config.json &'
                                                sh 'tala test http://localhost:9090/interact device_failure/test/interaction_tests_chi.txt'
                                                sh 'killall tdm'
                                            }

                                            stage('build & test device notification') {
                                                sh 'tdm build --config device_notification.config.json'
                                                sh 'tdm serve eng --config device_notification.config.json &'
                                                sh 'tala test http://localhost:9090/interact device_notification/test/interaction_tests_eng.txt'
                                                sh 'killall tdm'
                                            }
                                        }
                                    }
                                }
                            }

                            stage('generate training data') {
                                tdm.inside() {
                                    sh 'tala generate rasa --config rasa_numbers.config.json rasa_numbers eng > rasa_numbers_eng.yml'
                                    sh 'tala generate rasa --config rasa_numbers.config.json rasa_numbers sv > rasa_numbers_sv.yml'
                                    sh 'tala generate rasa --config datetime.config.json datetime_ddd eng > datetime_eng.yml'
                                    sh 'tala generate rasa --config datetime.config.json datetime_ddd sv > datetime_sv.yml'
                                    sh 'tala generate rasa --config person_name.config.json person_name eng > person_name_eng.yml'
                                }
                            }

                            stage('rasa numbers') {
                                use_duckling_config("rasa_numbers_eng.yml")
                                train("rasa_numbers_eng", "rasa_numbers_eng.yml")
                                tdm.inside() {
                                    sh 'tdm build --config rasa_numbers.config.json'
                                    sh 'tdm serve eng --config rasa_numbers.config.json &'
                                    sh 'tala test http://localhost:9090/interact rasa_numbers/test/interaction_tests_eng.txt'
                                    sh 'killall tdm'
                                }
                                unload("rasa_numbers_eng")
                                use_duckling_config("rasa_numbers_sv.yml")
                                train("rasa_numbers_sv", "rasa_numbers_sv.yml")
                                tdm.inside() {
                                    sh 'tdm serve sv --config rasa_numbers.config.json &'
                                    sh 'tala test http://localhost:9090/interact rasa_numbers/test/interaction_tests_sv.txt'
                                    sh 'killall tdm'
                                }
                                unload("rasa_numbers_sv")
                            }

                            stage('rasa time') {
                                use_duckling_config("datetime_eng.yml")
                                train("datetime_eng", "datetime_eng.yml")
                                tdm.inside() {
                                    sh 'tdm build --config datetime.config.json'
                                    sh 'tdm serve eng --config datetime.config.json &'
                                    sh 'tala test http://localhost:9090/interact datetime_ddd/test/interaction_tests_eng.txt'
                                    sh 'killall tdm'
                                }
                                unload("datetime_eng")
                                use_duckling_config("datetime_sv.yml")
                                train("datetime_sv", "datetime_sv.yml")
                                tdm.inside() {
                                    sh 'tdm serve sv --config datetime.config.json &'
                                    sh 'tala test http://localhost:9090/interact datetime_ddd/test/interaction_tests_sv.txt'
                                    sh 'killall tdm'
                                }
                                unload("datetime_sv")
                            }

                            stage('person name') {
                                use_spacy_entity_extractor_pipeline("person_name_eng.yml")
                                train("person_name_eng", "person_name_eng.yml")
                                tdm.inside() {
                                    sh 'tdm build --config person_name.config.json'
                                    sh 'FLASK_APP=person_name/http_service.py FLASK_ENV=development flask run --port=10101 &'
                                    sh 'tdm serve eng --config person_name.config.json &'
                                    sh 'tala test http://localhost:9090/interact person_name/test/interaction_tests_eng.txt'
                                    sh 'killall tdm'
                                }
                                unload("person_name_eng")
                            }
                        }
                    }
                }
            }
        }
    }
}

def use_duckling_config(filename) {
    def trainingData = readFile filename
    def defaultPipeline = 'pipeline: "spacy_sklearn"'
    def ducklingPipeline = """pipeline:
- name: "SpacyNLP"
- name: "SpacyTokenizer"
- name: "RegexFeaturizer"
- name: "SpacyFeaturizer"
- name: "SklearnIntentClassifier"
- name: "DucklingHTTPExtractor"
  url: "http://duckling:8000"
"""
    writeFile file: filename, text: trainingData.replace(defaultPipeline, ducklingPipeline)
}

def use_spacy_entity_extractor_pipeline(filename) {
    def trainingData = readFile filename
    def defaultPipeline = 'pipeline: "spacy_sklearn"'
    def ducklingPipeline = """pipeline:
- name: "SpacyNLP"
- name: "SpacyTokenizer"
- name: "RegexFeaturizer"
- name: "SpacyFeaturizer"
- name: "CRFEntityExtractor"
- name: "EntitySynonymMapper"
- name: "SklearnIntentClassifier"
- name: "SpacyEntityExtractor"
"""
    writeFile file: filename, text: trainingData.replace(defaultPipeline, ducklingPipeline)
}

def load(model) {
    sh "curl --fail 'http://rasa-nlu-jenkins.cloud.talkamatic.se:5000/parse?project=internal_ddds&model=${model}&q=hello' > /dev/null 2>&1"
}

def unload(model) {
    sh "curl --fail -X DELETE 'http://rasa-nlu-jenkins.cloud.talkamatic.se:5000/models?project=internal_ddds&model=${model}'"
}

def train(model, training_data) {
    sh "curl --fail -X POST -H 'Content-Type: application/x-yml' 'http://rasa-nlu-jenkins.cloud.talkamatic.se:5000/train?project=internal_ddds&model=${model}' --data-binary @${training_data} > /dev/null 2>&1"
}
