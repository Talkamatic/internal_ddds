[
    {
        "name": "top menu",
        "url": "http://localhost:9090/interact",
        "target_ddd": "temperature",
        "interaction": [
            {
                "speaker": "system",
                "move_content": [
                    "ask(?X.goal(X))"
                ]
            }
        ]
    },
    {
        "name": "menu driven interaction",
        "url": "http://localhost:9090/interact",
        "target_ddd": "temperature",
        "interaction": [
            {
                "speaker": "user",
                "move_content": [
                    "ask(?X.temperature(X))"
                ]
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.city(X))"
                ]
            },
            {
                "speaker": "user",
                "move_content": [
                    "answer(gothenburg)"
                ]
            },
            {
                "speaker": "system",
                "move_content": [
                    "answer(temperature(20_degrees))"
                ]
            },
            {
                "speaker": "user",
                "expected_passivity": true
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:reraise:perform(top)",
                    "ask(?X.goal(X))"
                ]
            }
        ]
    },
    {
        "name": "one-shot",
        "url": "http://localhost:9090/interact",
        "target_ddd": "temperature",
        "interaction": [
            {
                "speaker": "user",
                "move_content": [
                    "ask(?X.temperature(X))",
                    "answer(gothenburg)"
                ]
            },
            {
                "speaker": "system",
                "move_content": [
                    "answer(temperature(20_degrees))"
                ]
            },
            {
                "speaker": "user",
                "expected_passivity": true
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:reraise:perform(top)",
                    "ask(?X.goal(X))"
                ]
            }
        ]
    }
]
