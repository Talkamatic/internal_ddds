--- change answer to question of predicate with validator shouldn't cause crash
S> ["icm:loadplan", "ask(?X.goal(X))"]
U> ["request(flavour_number_plan)"]
S> ["icm:acc*pos", "icm:loadplan", "ask(?X.flavour(X))"]
U> ["answer(flavour(albatross))"]
S> ["icm:acc*pos", "ask(?X.number(X))"]
U> ["answer(flavour(seagull))"]
S> ["icm:acc*pos", "icm:loadplan", "ask(?X.number(X))"]

--- validation success/failure with domain validator
S> ["icm:loadplan", "ask(?X.goal(X))"]
U> ["request(single_value_configuration_validation_in_domain)"]
S> ["icm:acc*pos", "icm:loadplan", "ask(?X.predicate_a(X))"]
U> ["answer(individual_a)"]
S> ["icm:acc*pos", "ask(?X.predicate_b(X))"]
U> ["answer(individual_a)"]
S> ["icm:acc*neg:rejected(set([predicate_b(individual_a)]), ValidatorB)", "icm:reraise", "ask(?X.predicate_b(X))"]

--- validation success/failure with domain validator II
S> ["icm:loadplan", "ask(?X.goal(X))"]
U> ["request(single_value_configuration_validation_in_domain)"]
S> ["icm:acc*pos", "icm:loadplan", "ask(?X.predicate_a(X))"]
U> ["answer(individual_b)"]
S> ["icm:acc*neg:rejected(set([predicate_a(individual_b)]), ValidatorA)", "icm:reraise", "ask(?X.predicate_a(X))"]

--- validation success/failure with configuration domain validator II
S> ["icm:loadplan", "ask(?X.goal(X))"]
U> ["request(multivalue_configuration_validation_in_domain)"]
S> ["icm:acc*pos", "icm:loadplan", "ask(?X.predicate_c(X))"]
U> ["answer(individual_a)"]
S> ["icm:acc*pos", "ask(?X.predicate_d(X))"]
U> ["answer(individual_a)"]
S> ["icm:acc*neg:rejected(set([predicate_c(individual_a), predicate_d(individual_a)]), ValidatorC)", "icm:reraise", "ask(?X.predicate_d(X))"]
