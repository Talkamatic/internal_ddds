[
    {
        "name": "listen",
        "url": "http://localhost:9090/interact",
        "target_ddd": "music_player",
        "interaction": [
            {
                "speaker": "system",
                "move_content": [
                    "ask(?X.goal(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(listen)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.artist(X))"
                ]
            },
            {
                "speaker": "user",
                "move_content": [
                    "answer(kaptenen)"
                ]
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "report(ServiceResultProposition(ListenToArtist, [url_to_play(\"mock_audio_url\")], SuccessfulServiceAction()))"
                ]
            }
        ]
    },
    {
        "name": "change domain",
        "url": "http://localhost:9090/interact",
        "target_ddd": "music_player",
        "interaction": [
            {
                "speaker": "system",
                "move_content": [
                    "ask(?X.goal(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(listen)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.artist(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "answer(kaptenen)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "report(ServiceResultProposition(ListenToArtist, [url_to_play(\"mock_audio_url\")], SuccessfulServiceAction()))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(navigate)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.destination(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "answer(majorna)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "report(ServiceResultProposition(NavigateToDestination, [], SuccessfulServiceAction()))"
                ]
            }
        ]
    },
    {
        "name": "both domains have predicates and individual with the same name",
        "url": "http://localhost:9090/interact",
        "target_ddd": "music_player",
        "interaction": [
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(mock_action)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.common_predicate(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "answer(common_predicate(opeth))",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "entities": [
                    {
                        "name": "opeth",
                        "sort": "common_sort",
                        "natural_language_form": "Opeth",
                        "ddd": "music_player"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "report(ServiceResultProposition(MockAction, [common_predicate(opeth)], SuccessfulServiceAction()))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(mock_action)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.common_predicate(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "answer(common_predicate(johanneberg))",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "entities": [
                    {
                        "name": "johanneberg",
                        "sort": "common_sort",
                        "natural_language_form": "Johanneberg",
                        "ddd": "navigation"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "report(ServiceResultProposition(MockAction, [common_predicate(johanneberg)], SuccessfulServiceAction()))"
                ]
            }
        ]
    },
    {
        "name": "returning to other ddd",
        "url": "http://localhost:9090/interact",
        "target_ddd": "music_player",
        "interaction": [
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(navigate)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.destination(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(listen)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.artist(X))"
                ]
            },
            {
                "speaker": "user",
                "move_content": [
                    "answer(kaptenen)"
                ]
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "report(ServiceResultProposition(ListenToArtist, [url_to_play(\"mock_audio_url\")], SuccessfulServiceAction()))"
                ]
            },
            {
                "speaker": "user",
                "expected_passivity": true
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:reraise:perform(navigate)",
                    "ask(?X.destination(X))"
                ]
            }
        ]
    },
    {
        "name": "going back to other ddd",
        "url": "http://localhost:9090/interact",
        "target_ddd": "music_player",
        "interaction": [
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(navigate)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.destination(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(listen)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.artist(X))"
                ]
            },
            {
                "speaker": "user",
                "move_content": [
                    "request(up)"
                ]
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos"
                ]
            },
            {
                "speaker": "user",
                "expected_passivity": true
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:reraise:perform(navigate)",
                    "ask(?X.destination(X))"
                ]
            }
        ]
    },
    {
        "name": "going to top",
        "url": "http://localhost:9090/interact",
        "target_ddd": "music_player",
        "interaction": [
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(navigate)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.destination(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(listen)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.artist(X))"
                ]
            },
            {
                "speaker": "user",
                "move_content": [
                    "request(top)"
                ]
            },
            {
                "speaker": "system",
                "move_content": [
                    "answer(active_domain(\"music_player\"))",
                    "ask(?X.goal(X))"
                ]
            }
        ]
    },
    {
        "name": "answer after issue reraise",
        "url": "http://localhost:9090/interact",
        "target_ddd": "music_player",
        "interaction": [
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(top)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "ask(?X.goal(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(navigate)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.destination(X))"
                ]
            },
            {
                "speaker": "user",
                "expected_passivity": true
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:reraise",
                    "ask(?X.destination(X))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(listen)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.artist(X))"
                ]
            }
        ]
    },
    {
        "name": "no clarification across multiple DDDs",
        "url": "http://localhost:9090/interact",
        "target_ddd": "music_player",
        "interaction": [
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(set_volume)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.volume(X))"
                ]
            },
            {
                "speaker": "user",
                "move_content": [
                    "answer(10)"
                ]
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "report(ServiceResultProposition(SetVolume, [volume(10)], SuccessfulServiceAction()))"
                ]
            },
            {
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(navigate)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:loadplan",
                    "ask(?X.destination(X))"
                ]
            },
            {
                "speaker": "user",
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "request(top)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }, {
                        "moves": [
                            {
                                "semantic_expression": "request(top)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }


                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "icm:reraise:perform(top)",
                    "ask(?X.goal(X))"
                ]
            },
            {
                "speaker": "user",
                "interpretations": [
                    {
                        "moves": [
                            {
                                "semantic_expression": "answer(10)",
                                "ddd": "navigation",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    },
                                        {
                        "moves": [
                            {
                                "semantic_expression": "answer(10)",
                                "ddd": "music_player",
                                "perception_confidence": 1.0,
                                "understanding_confidence": 1.0
                            }
                        ],
                        "modality": "other"
                    }
                ],
                "speaker": "user"
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:accommodate:set_departure_day",
                    "icm:und*pos:USR*goal(perform(set_departure_day))"
                ]
            },
            {
                "speaker": "user",
                "expected_passivity": true
            },
            {
                "speaker": "system",
                "move_content": [
                    "icm:acc*pos",
                    "report(ServiceResultProposition(SetDepartureDay, [departure_day(10)], SuccessfulServiceAction()))"
                ]
            }
        ]
    }
]
