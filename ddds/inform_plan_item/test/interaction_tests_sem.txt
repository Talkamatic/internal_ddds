--- going back to plan with inform, don't insist
U> ["request(do_work)"]
S> ["icm:loadplan", "answer(start_section(\"Nu b\u00f6rjar vi med fr\u00e5gorna p\u00e5 denna sida\"))", "ask(?X.some_predicate(X))"]
U> ["ask(?X.explanation_of_word(X))", "answer(word_to_explain(\"some word\"))"]
S> ["answer(explanation_of_word(\"some explanation\"))"]
U>
S> ["icm:reraise:perform(do_work)", "icm:reraise", "ask(?X.some_predicate(X))"]

--- educational dialogue with inform action combination
U> ["request(educational_dialogue_with_inform_action_combination)"]
S> ["icm:loadplan", "answer(start_section)", "ask(?yn_have_boys_tasted_fish)"]
U> ["answer(no)"]
S> ["answer(comment(\"Exakt. De har inte smakat p\u00e5 fisken\"))", "answer(on_to_question_2)", "answer(background_question_2)", "ask(?X.rn_why_boys_not_like_fish(X))"]
U> ["answer(rn_why_boys_not_like_fish(rn_why_boys_not_like_fish_correct))"]
S> ["answer(comment(\"Ja, s\u00e5 kan det nog vara\"))", "answer(end_of_section)"]

--- educational dialogue with two hints, second one resolving
U> ["request(educational_dialogue_with_two_hints)"]
S> ["icm:loadplan", "answer(start_section)", "ask(?X.rn_why_boys_not_like_fish(X))"]
U> ["icm:acc*neg:issue"]
S> ["answer(helpful_information_rn_why_boys_not_like_fish(rn_why_boys_not_like_fish_hint))", "ask(?X.rn_why_boys_not_like_fish(X))"]
U> ["icm:acc*neg:issue"]
S> ["answer(rn_why_boys_not_like_fish(rn_why_boys_not_like_fish_pass))"]
U>
S> ["answer(end_of_section)"]

--- going back to plan with inform, don't insist (always relevant)
U> ["request(do_work)"]
S> ["icm:loadplan", "answer(start_section(\"Nu b\u00f6rjar vi med fr\u00e5gorna p\u00e5 denna sida\"))", "ask(?X.some_predicate(X))"]
U> ["ask(?X.always_relevant_question(X))", "answer(something_to_explain(\"some word\"))"]
S> ["answer(always_relevant_question(\"some explanation\"))"]
U>
S> ["icm:reraise:perform(do_work)", "icm:reraise", "ask(?X.some_predicate(X))"]

--- Testing absence of deadlock
U> ["request(deadlock_test)"]
S> ["answer(comment(\"Det d√§r gick ju bra!\"))"]
